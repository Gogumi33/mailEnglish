// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  nickname  String
  createdAt DateTime @default(now())

  bookmarks Bookmark[]
  settings  Settings?
}

model Sentence {
  id          Int     @id @default(autoincrement())
  content     String
  translation String
  example     String?
  audioUrl    String?
  level       String  @default("beginner")
  topic       String
  createdAt   DateTime @default(now())

  bookmarks   Bookmark[]
}

model Bookmark {
  id         Int  @id @default(autoincrement())
  userId     Int  
  sentenceId Int  
  createdAt  DateTime @default(now())

  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  sentence   Sentence @relation(fields: [sentenceId], references: [id], onDelete: Cascade)

  @@unique([userId, sentenceId]) // 중복 북마크 방지
}

model Settings {
  id            Int  @id @default(autoincrement())
  userId        Int  @unique  // ✅ One-to-One 관계에서 반드시 UNIQUE 설정
  level         String  @default("beginner")
  topics        String?
  dailyReminder Boolean @default(false)
  createdAt     DateTime @default(now())

  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
